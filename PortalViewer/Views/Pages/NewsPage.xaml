<Page
     x:Class="InfoPortalWpf.Views.Pages.NewsPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:helpers="clr-namespace:InfoPortalWpf.Helpers"
  xmlns:local="clr-namespace:InfoPortalWpf.Views.Pages"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" xmlns:pages="clr-namespace:InfoPortalWpf.ViewModels.Pages"
    Title="NewsPage"
    d:DataContext="{d:DesignInstance pages:NewsViewModel,
                                   IsDesignTimeCreatable=False}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
  ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
  Foreground="{DynamicResource TextFillColorPrimaryBrush}"
  mc:Ignorable="d">
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>

        </Grid.RowDefinitions>


        <DataGrid  x:Name="dataGrid" 
                   EnableRowVirtualization="True"
                   CanUserAddRows="False"
                   ItemsSource="{Binding NewsCollection,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   AutoGenerateColumns="False"
                   ScrollViewer.CanContentScroll="True"
                   ScrollViewer.HorizontalScrollBarVisibility="Visible"
                   ScrollViewer.VerticalScrollBarVisibility="Visible" Margin="0,0,0,5" HorizontalAlignment="Left" 
                   SelectionMode="Single" SelectionChanged="DataGrid_SelectionChanged">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="1,1,1,1">
                                    <ContentPresenter VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}"  />
                <DataGridTextColumn Header="Header" Binding="{Binding Header}" IsReadOnly="True" />
                <DataGridTextColumn Header="Text" Binding="{Binding Text}" IsReadOnly="True" />
                <DataGridTextColumn Header="CreateDate" Binding="{Binding CreateDate}" IsReadOnly="True" />
                <DataGridTextColumn Header="UpdateDate" Binding="{Binding UpdateDate}" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Vertical" Grid.Row="1">
            <StackPanel Orientation="Horizontal" Height="32" Width="800">
                <Button Content="UpdateTable" Command="{Binding UpdateTable}" IsEnabled="True" Margin="0,0,5,0"/>
                <Button Content="Show News's tag" Command="{Binding ShowTagsCommand}" IsEnabled="True"/>
            </StackPanel>
            <ui:DataGrid x:Name="dataGrid_2" 
               ItemsSource="{Binding ShowTagsCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               HorizontalAlignment="Left" VerticalAlignment="Top"
               CanUserAddRows="False" 
               AutoGenerateColumns="False"
               HeadersVisibility="None" Margin="0,5,0,5"
               CanUserDeleteRows ="False"
               >
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="1,1,1,1">
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Header" Binding="{Binding Name}" IsReadOnly="True" />
                </DataGrid.Columns>
            </ui:DataGrid>
        </StackPanel>
    </Grid>
</Page>


